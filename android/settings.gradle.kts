// android/settings.gradle.kts
import java.util.Properties
import org.gradle.api.initialization.resolve.RepositoriesMode

// --- Load Flutter SDK path from local.properties, or env fallback (CI safe) ---
val localProps = Properties()
val localPropsFile = File(rootDir, "local.properties")
if (localPropsFile.exists()) {
    localPropsFile.reader(Charsets.UTF_8).use { localProps.load(it) }
}
val flutterSdkPath: String? =
    localProps.getProperty("flutter.sdk")
        ?: System.getenv("FLUTTER_HOME")
        ?: System.getenv("FLUTTER_SDK")

require(!flutterSdkPath.isNullOrBlank()) {
    """
    Flutter SDK path not found.
    Set flutter.sdk in android/local.properties (generated by Flutter), 
    or provide FLUTTER_HOME / FLUTTER_SDK in the environment.
    """.trimIndent()
}

// This makes the Flutter Gradle plugin ("dev.flutter.flutter-plugin-loader") available
includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")

pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    // Provided by the includeBuild above
    id("dev.flutter.flutter-plugin-loader") version "1.0.0"

    // Pin plugin versions so Gradle can resolve them reliably
    id("com.android.application") version "8.7.3" apply(false)
    id("org.jetbrains.kotlin.android") version "1.9.22" apply(false)
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.name = "genesisos_app"
include(":app")
