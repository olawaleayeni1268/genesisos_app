name: Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-android:
    runs-on: ubuntu-latest

    # Make secrets available to the build step
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.32.8'

      - name: Flutter pub get
        run: flutter pub get

      # Optional: only if you added signing secrets; harmless if you didnâ€™t.
      - name: Restore keystore (optional)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/upload-keystore.jks
          cat > android/key.properties <<'EOF'
          storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}
          keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
          storeFile=upload-keystore.jks
          EOF

      - name: Build release APK (inject Supabase defines)
        run: |
          flutter build apk --release \
            --build-name=${{ github.run_number }} \
            --build-number=${{ github.run_number }} \
            --dart-define=SUPABASE_URL="${SUPABASE_URL}" \
            --dart-define=SUPABASE_ANON_KEY="${SUPABASE_ANON_KEY}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk
